syms x
f1 = @(x) x^3-2*x-5;
fprime = @(x) 3*x^2-2;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%a)
syms a b c d
f1_syms = a*z^3+b*x^2-c*z-d;
solve(f1_syms)
f1_ = subs(f1_syms, {a, b, c, d}, {1, 0, 2, 5});
solve_mtx = eval(solve(f1_))
%{
得到了以下输出：
ans =
 
  (- a*z^3 + c*z + d)^(1/2)/b^(1/2)
 -(- a*z^3 + c*z + d)^(1/2)/b^(1/2)
 
ans =
 
                                                                                                               2/(3*((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3)) + ((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3)
 - (3^(1/2)*(2/(3*((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3)) - ((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3))*i)/2 - 1/(3*((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3)) - ((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3)/2
   (3^(1/2)*(2/(3*((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3)) - ((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3))*i)/2 - 1/(3*((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3)) - ((108^(1/2)*643^(1/2))/108 + 5/2)^(1/3)/2

solve_mtx =

   2.0946 + 0.0000i
  -1.0473 + 1.1359i
  -1.0473 - 1.1359i

%}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%b)用roots函数求3个数值根
a = [1 0 -2 -5];
f1_zero_roots = roots(a)
%{
得到：
f1_zero_roots =

   2.0946 + 0.0000i
  -1.0473 + 1.1359i
  -1.0473 - 1.1359i

%}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%c)用fzerotx函数求实数根
f1_zerotx = fzerotx(f1,[2,3])
%{
得到：
f1_zerotx =

    2.0946
%}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%d)牛顿法求一个复数根
k = 0;
x = -1+ 1.2i;
xprev = x - f1(x)/fprime(x);
while abs(x-xprev) >eps*abs(x)
    xprev = x;
    x = x - f1(x)/fprime(x)
    k = k+1;
end
%{
得到了如下输出：
x =

  -1.0436 + 1.1355i


x =

  -1.0473 + 1.1359i


x =

  -1.0473 + 1.1359i


x =

  -1.0473 + 1.1359i


x =

  -1.0473 + 1.1359i

%}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%e)二分法求复数根：
%{
二分法求不了复数根。因为，区间二分法算法中的关键是通过每次把区间二等分，然后给出这2个等分
区间中有根的那个区间，从而不断地缩小区间长度。
实数，可以使用一维的实轴表示，因此可以不断被二分。
对于复数，必须使用二维复数平面来表示。从理论上说，如果真的要不断逼近这个复数解，先把包含复数解的区域2等分，
但是如何来判断解在哪个区域呢？而且这个2等分既要是沿实轴，最后还是要沿虚轴，来从2个维度逼近。
%}


